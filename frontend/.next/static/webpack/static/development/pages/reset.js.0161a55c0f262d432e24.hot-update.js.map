{"version":3,"file":"static/webpack/static/development/pages/reset.js.0161a55c0f262d432e24.hot-update.js","sources":["webpack:///./components/Reset.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {Mutation} from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport Proptypes from 'prop-types';\n\nconst RESET_MUTATION = gql`\n    mutation RESET_MUTATION($resetToken: String!, $password: String!, $confirmPassword: String!){\n        resetPassword(resetToken: $resetToken, password: $password, confirmPassword: $confirmPassword ){\n            id\n            email\n            name\n        }\n    }\n`;\n\nclass Reset extends Component {\n    static propTypes = {\n        resetToken: Proptypes.string.isRequired\n    };\n\n    state = {\n        password: '',\n        confirmPassword: '',\n    };\n\n    saveToState = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    };\n\n    render() {\n        return (\n            <Mutation \n                mutation={RESET_MUTATION} \n                variables={{\n                    resetToken: this.props.resetToken,\n                    password: this.state.password,\n                    confirmPassword: this.state.confirmPassword,\n                }}>\n                {(reset, {error, loading, called})=> (\n                    <Form method='POST' onSubmit={async e => {\n                        e.preventDefault();\n                        await reset();\n                        this.setState({password:'', confirmPassword:''})\n                    }}>\n                        <fieldset disabled={loading} aria-busy={loading}>\n                            <h2>Reset your password</h2>\n                            <Error error={error}/>\n                            <label htmlFor='password'>\n                                Password\n                                <input \n                                    type='password'\n                                    name='password'\n                                    placeholder='password'\n                                    value={this.state.password}\n                                    onChange={this.saveToState}/>\n                            </label>\n                            \n                            <label htmlFor='confirmPassword'>\n                                 Confirm Password\n                                <input \n                                    type='password'\n                                    name='confirmPassword'\n                                    placeholder='confirmPassword'\n                                    value={this.state.confirmPassword}\n                                    onChange={this.saveToState}/>\n                            </label>\n                            <button type='submit'>Reset your Password!</button>\n                        </fieldset>\n                    </Form>\n                )}\n            </Mutation>\n        )\n    }\n};\n\nexport default Reset;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AASA;;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5BA;AAkCA;;;;AAzDA;AACA;AADA;AAEA;AADA;AACA;AAwDA;AAEA;;;;A","sourceRoot":""}