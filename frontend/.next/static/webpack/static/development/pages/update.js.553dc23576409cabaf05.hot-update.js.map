{"version":3,"file":"static/webpack/static/development/pages/update.js.553dc23576409cabaf05.hot-update.js","sources":["webpack:///./components/UpdateItem.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {Mutation, Query} from 'react-apollo';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport gql from 'graphql-tag';\nimport Error from './ErrorMessage';\nimport Router from 'next/router';\n\nconst UPDATE_ITEM_MUTATION =  gql`\n    mutation  UPDATE_ITEM_MUTATION($id: ID!,$title: String!, $description: String!,$price: Int!){\n        createItem(title: $title, description: $description, price: $price){\n            id\n            title\n            description\n            price\n        }\n    }\n`;\n\nconst SINGLE_ITEM_QUERY = gql`\n    query SINGLE_ITEM_QUERY($id: ID!){\n        item(where:{id: $id}){\n            id\n            title\n            description\n            price\n        }\n    }\n`;\n\nclass UpdateItem extends Component {\n    state =  {};\n    \n    handleChange = (e) => {\n        const {name, type, value} = e.target;\n        const val = type === 'number' ? parseFloat(value) : value;\n        this.setState({[name]: val})\n    };\n\n    updateItem = async (e, updateItemMutation) => {\n        e.preventDefault;\n        console.log('Updating item...');\n        console.log(this.state);\n        const res =  await updateItemMutation({\n            variables:{\n                id: this.props.id,\n                ...this.state,\n            }\n        });\n        console.log('Updated!')\n    };\n\n    render() {\n        return (\n            <Query query={SINGLE_ITEM_QUERY} variables={{id: this.props.id}}>\n                {({data, loading}) => {\n                    if(loading) return <p>Loading...</p>;\n                    return (\n                        <Mutation mutation={UPDATE_ITEM_MUTATION} variables={this.state}>\n                            {(UpdateItem, {loading, error})=>(\n                                <Form onSubmit={e => this.UpdateItem(e, updateItem)}>\n                                    <Error error={error}/>\n                                    <fieldset disabled={loading} aria-busy={loading}>\n                                        <label htmlFor=\"title\">\n                                            Title\n                                            <input \n                                                type=\"text\" \n                                                id=\"title\" \n                                                name=\"title\" \n                                                placeholder=\"Title\" \n                                                required\n                                                defaultValue={data.item.title}\n                                                onChange={this.handleChange}>\n                                            </input>\n                                        </label>\n                                    \n                                        <label htmlFor=\"price\">\n                                            Price\n                                            <input \n                                                type=\"number\" \n                                                id=\"price\" \n                                                name=\"price\" \n                                                placeholder=\"Price\" \n                                                required\n                                                defaultValue={data.item.price}\n                                                onChange={this.handleChange}>\n                                            </input>\n                                        </label>\n                                        \n                                        <label htmlFor=\"description\">\n                                            Description\n                                            <textarea \n                                                id=\"description\" \n                                                name=\"description\" \n                                                placeholder=\"Enter a Description\" \n                                                required\n                                                defaultValue={data.item.description}\n                                                onChange={this.handleChange}>\n                                            </textarea>\n                                        </label>\n                                        <button type=\"submit\">Save Changes</button>\n                                    </fieldset>\n                                </Form>\n                            )}\n                        </Mutation>\n                    )\n                }} \n            </Query>\n        );\n    };\n};\n\nexport default UpdateItem;\nexport {UPDATE_ITEM_MUTATION};"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAWA;AACA;AAUA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AACA;AADA;AADA;AACA;AALA;AAIA;AAMA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAYA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAzCA;AA+CA;AAGA;;;;AA/EA;AACA;AA+EA;AAEA;;;;;A","sourceRoot":""}