{"version":3,"file":"static/webpack/static/development/pages/items.js.4061348e3ab3b5df80f7.hot-update.js","sources":["webpack:///./components/Items.js","webpack:///./components/Pagination.js","webpack:///./components/styles/PaginationStyles.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {Query} from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Item from './Item';\nimport Pagination from './Pagination';\n\n\nconst ALL_ITEMS_QUERY = gql`\n    query ALL_ITEMS_QUERY{\n        items{\n            id\n            title\n            price\n            description\n            image\n            largeImage\n        }\n    }\n`;\n\nconst Center =  styled.div`\n    text-align: center;\n`;\n\nconst ItemsList = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 60px;\n    max-width: ${props => props.theme.maxWidth};\n    margin: 0 auto;\n`;\n\n\nclass Items extends Component {\n    render() {\n        return (\n            <Center>\n                <Pagination/>\n                <Query query={ALL_ITEMS_QUERY}>\n                    {({data, error, loading}) => {\n                        if(loading) return <p>Loading...</p>;\n                        if(error) return <p>Error: {error.message}</p>\n                        return <ItemsList>\n                            {data.items.map(item => <Item item={item} key={item.id}/>)}\n                        </ItemsList>\n                    }}\n                </Query>\n                <Pagination/>\n            </Center>\n        )   \n    }\n};\n\nexport default Items;\nexport {ALL_ITEMS_QUERY};","import React from 'react';\nimport PaginationStyles from './styles/PaginationStyles';\nimport gql from 'graphql-tag';\nimport {Query} from 'react-apollo';\nimport {perPage} from '../config';\nimport Head from 'next/head';\nimport Link from 'next/link';\n\nconst PAGINATION_QUERY = gql`\n    query PAGINATION_QUERY{\n        itemsConnection{\n            aggregate{\n                count\n            }\n        }\n    }\n`;\n\nconst Pagination = props => (\n    <PaginationStyles>\n    <Query query={PAGINATION_QUERY}>\n            {({data, loading, error}) =>  <p>hi im the pagination!</p>\n                // if(loading) return <p>Loading...</p>\n                // const count = data.itemsConnection.aggregate.count;\n                // const pages = Math.ceil(count/perPage);\n                // const page = props.page;\n                // return(\n                    // <PaginationStyles>\n                    //     <Head>\n                    //         <title>Sick Fits! - Page {page} of {pages}</title>\n                    //     </Head>\n                    //     <Link prefetch href={{pathname:'items',query: {page: page - 1}}}>\n                    //         <a className=\"prev\" aria-disabled={page <= 1}>↩ Prev</a>\n                    //     </Link>\n                    //     <p>Page {props.page} of {pages}</p>\n                    //     <p>{count} Items Total</p>\n                    //     <Link prefetch href={{pathname:'items',query: {page: page + 1}}}>\n                    //         <a className=\"prev\" aria-disabled={page >= pages}>Next ↪ </a>\n                    //     </Link>\n                    // </PaginationStyles>\n                // );\n            \n        }\n     </Query>\n     </PaginationStyles>\n);\n\nexport default Pagination;","import styled from 'styled-components';\n\nconst PaginationStyles = styled.div`\n  text-align: center;\n  display: inline-grid;\n  grid-template-columns: repeat(4, auto);\n  align-items: stretch;\n  justify-content: center;\n  align-content: center;\n  margin: 2rem 0;\n  border: 1px solid ${props => props.theme.lightgrey};\n  border-radius: 10px;\n  & > * {\n    margin: 0;\n    padding: 15px 30px;\n    border-right: 1px solid ${props => props.theme.lightgrey};\n    &:last-child {\n      border-right: 0;\n    }\n  }\n  a[aria-disabled='true'] {\n    color: grey;\n    pointer-events: none;\n  }\n`;\n\nexport default PaginationStyles;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAaA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAIA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAjBA;AACA;AAiBA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AASA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAFA;AACA;AA4BA;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAQA;AAAA;AAKA;AAAA;AAWA;;;;A","sourceRoot":""}