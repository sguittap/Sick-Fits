{"version":3,"file":"static/webpack/static/development/pages/_app.js.e5e5a64e772b66a89d52.hot-update.js","sources":["webpack:///./components/Search.js"],"sourcesContent":["import React from 'react';\nimport Downshift, {resetIdCounter} from 'downshift';\nimport Router from 'next/router';\nimport {ApolloConsumer} from 'react-apollo';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport {DropDown, DropDownItem, SearchStyles} from './styles/DropDown';\n\nconst SEARCH_ITEMS_QUERY = gql`\n  query SEARCH_ITEMS_QUERY($searchTerm: String!) {\n    items(where: { OR: [{ title_contains: $searchTerm }, { description_contains: $searchTerm }] }) {\n      id\n      image\n      title\n    }\n  }\n`;\n\nfunction routeToItem(item) {\n  Router.push({\n    pathname: '/item',\n    query: {\n      id: item.id,\n    },\n  });\n}\n\nclass AutoComplete extends React.Component {\n  state = {\n    items: [],\n    loading: false,\n  };\n  \n  onChange = debounce(async (e, client) => {\n    this.setState({ loading: true });\n    const res = await client.query({\n      query: SEARCH_ITEMS_QUERY,\n      variables: { searchTerm: e.target.value },\n    });\n    this.setState({\n      items: res.data.items,\n      loading: false,\n    });\n  }, 350);\n  \n  render() {\n    resetIdCounter();\n    return (\n      <SearchStyles>\n        <Downshift onChange={routeToItem} itemToString={item => (item === null ? '' : item.title)}>\n          {({ getInputProps, getItemProps, isOpen, inputValue, highlightedIndex }) => (\n            <div>\n              <ApolloConsumer>\n                {client => (\n                  <input\n                    {...getInputProps({\n                      type: 'search',\n                      placeholder: 'Search For An Item',\n                      id: 'search',\n                      className: this.state.loading ? 'loading' : '',\n                      onChange: e => {\n                        e.persist();\n                        this.onChange(e, client);\n                      },\n                    })}\n                  />\n                )}\n              </ApolloConsumer>\n              {isOpen && (\n                <DropDown>\n                  {this.state.items.map((item, index) => (\n                    <DropDownItem\n                      {...getItemProps({ item })}\n                      key={item.id}\n                      highlighted={index === highlightedIndex}\n                    >\n                      <img width=\"50\" src={item.image} alt={item.title} />\n                      {item.title}\n                    </DropDownItem>\n                  ))}\n                  {!this.state.items.length &&\n                    !this.state.loading && <DropDownItem> Nothing Found {inputValue}</DropDownItem>}\n                </DropDown>\n              )}\n            </div>\n          )}\n        </Downshift>\n      </SearchStyles>\n    );\n  }\n};\n\nexport default AutoComplete;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AASA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAGA;AACA;AAAA;AAAA;AAFA;AACA;AAHA;AAEA;AACA;AAGA;AACA;AACA;AAFA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;;;;;;AAWA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AARA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AA/BA;AAuCA;;;;AA9DA;AACA;AA8DA;AAEA;;;;A","sourceRoot":""}